vamp {
  namespace = "vamp"

  container-driver {
    type = "marathon"
    mesos.url = ""
    marathon.url = ""
  }

  gateway-driver {
    elasticsearch.metrics {
      index = "vamp-vga-*"
      type = "log"
    }
    marshallers = [
      {
        type = "haproxy"
        name = "1.7"
        template {
          resource = "/io/vamp/gateway_driver/haproxy/template.twig"
        }
      }
    ]
  }

  workflow-driver {
    type = "marathon"
    workflow {
      deployables = [
        {
          type = "application/javascript"
          breed = "vamp-workflow-javascript"
        }
      ]

      scale {
        instances = 1
        cpu = 0.1
        memory = 128MB
      }

      vamp-url = "http://localhost:8080"
      vamp-url = "http://"${?VAMP_HOST}":8080"
      vamp-key-value-store-path = "/vamp/"${vamp.namespace}"/workflows/${workflow}"
      vamp-key-value-store-type = ${vamp.persistence.key-value-store.type}
      vamp-key-value-store-connection = ""
      vamp-key-value-store-connection = ${?ZOOKEEPER}
      vamp-elasticsearch-url = ""
      vamp-elasticsearch-url = ${?VAMP_ELASTICSEARCH_URL}
      vamp-workflow-execution-period = 60
      vamp-workflow-execution-timeout = 10
    }
  }

}

vamp.persistence {
  response-timeout = 5 seconds #
  database {
    type: "" # in-memory, file, postgres, mysql, sqlserver
    type=${?DATABASE_TYPE}
    sql {
      url = ""
      user = ""
      password = ""
      delay = 3s
      table = "artifacts"
      synchronization.period = 0s
    }
    file {
      directory = ""
    }
  }
  key-value-store {
    type = ""
    type=${?KEY_VALUE_STORE_TYPE}
    base-path = "/vamp/${namespace}"
    zookeeper.servers = ""
    zookeeper.servers = ${?ZOOKEEPER}
  }
}

vamp.pulse {
  type = "no-store" # no-store
  type=${?PULSE_TYPE}
  response-timeout = 30 seconds # timeout for pulse operations
}

vamp.http-api {
  port = 8080
  interface = 0.0.0.0
  # ssl = true
  # certificate = /absolute/path/to/certificate.p12
  response-timeout = 10 seconds # HTTP response timeout
  strip-path-segments = 0
  sse.keep-alive-timeout = 15 seconds # timeout after an empty comment (":\n") will be sent in order keep connection alive
  websocket.stream-limit = 100
  ui {
    directory = ""
    directory = ${?UI_DIRECTORY}
    index = ${vamp.http-api.ui.directory}"/index.html" # index file, e.g. ${vamp.http-api.ui.directory}"/index.html"
  }
}

